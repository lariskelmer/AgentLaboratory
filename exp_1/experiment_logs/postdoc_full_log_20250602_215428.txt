=== POSTDOC PROMPT LOG ===

Interaction 1:
('', "Current Literature Review: Provided here is a literature review on this topic:\\narXiv ID: 2011.14808v1, Summary: This comprehensive survey paper discusses deep learning optimization techniques for edge computing systems. It covers four main approaches: (1) hand-crafted lightweight models like MobileNet and EfficientNet, (2) model compression methods including pruning and quantization, (3) hardware-aware neural architecture search, and (4) adaptive deep learning models. The paper provides detailed comparisons of different techniques and their tradeoffs between accuracy and efficiency. Experimental results show these optimization methods can significantly reduce model size and computational complexity while maintaining competitive accuracy, making them suitable for resource-constrained edge devices.\\narXiv ID: 2108.09343v2, Summary: This paper proposes an early-exit DNN architecture with expert branches specialized for different image distortion types (blur and noise) to improve edge offloading efficiency. The key innovation is using a distortion classifier to select appropriate expert branches at each exit point, enabling more accurate early classification on edge devices. Experiments show the approach increases edge classification probability by 10-20% for distorted images while maintaining accuracy, reducing end-to-end latency by up to 30% compared to standard early-exit DNNs. The method is evaluated on Amazon EC2 instances across different geographic locations, demonstrating robustness under varying network conditions. The work provides important insights for optimizing real-time image classification on resource-constrained edge devices handling distorted inputs.\\narXiv ID: 2111.14243v1, Summary: EffCNet is an efficient version of CondenseNet designed for edge devices, utilizing depthwise separable convolutions and self-querying data augmentation to improve real-time inference performance. The paper demonstrates significant reductions in model size (from 16.7MB to 2.1MB for CIFAR-10), FLOPs (from 65.82M to 61.01M), and parameters while maintaining competitive accuracy (94.15% top-1 on CIFAR-10). The architecture was successfully deployed on NXP BlueBox 2.0, an edge platform for autonomous vehicles, showing practical applicability for resource-constrained environments.\\narXiv ID: 2502.10047v1, Summary: This paper presents Janus, a novel framework for low-latency cloud-device collaborative Vision Transformer (ViT) inference over dynamic networks. The key innovation is combining token pruning techniques with a fine-to-coarse model splitting policy to enable efficient ViT execution across edge and cloud resources. Janus dynamically selects optimal pruning levels and split points based on network conditions, achieving up to 5.15x throughput improvement and reducing latency violations by up to 98.7% compared to baselines while maintaining accuracy. The system includes a lightweight profiler for latency prediction and a dynamic scheduler for real-time configuration. Experimental results demonstrate Janus's effectiveness across image recognition and video classification tasks under various network conditions.\\narXiv ID: 2404.10407v1, Summary: This comprehensive survey paper evaluates four primary model compression techniques (quantization, low-rank approximation, knowledge distillation, and pruning) for optimizing Vision Transformers (ViTs) for edge deployment. Through extensive experiments on CIFAR datasets, the authors demonstrate that post-training quantization and knowledge distillation achieve the best trade-offs, reducing model size by 4x while maintaining accuracy. The paper also explores hybrid approaches, showing that combining quantization with knowledge distillation can double inference speed while reducing model size to 25% of original. Key findings include: 1) Dynamic quantization reduces ViT size to 84MB (from 327MB) with minimal accuracy drop (98.73% vs 98.94% on CIFAR-10), 2) DeiT tiny achieves 16.78 iterations/sec (vs 4.48 for vanilla ViT) with 95.43% accuracy, and 3) Hybrid approaches combining quantization and distillation achieve 2x speedup with manageable accuracy trade-offs.\\narXiv ID: 2303.08810v1, Summary: BiFormer introduces a novel bi-level routing attention (BRA) mechanism for vision transformers that enables dynamic, query-aware sparsity. BRA first filters irrelevant key-value pairs at a coarse region level (region-to-region routing) before applying fine-grained token-to-token attention in the remaining regions. This approach achieves O((HW)^(4/3)) complexity with proper region partitioning while maintaining global receptive fields. The authors demonstrate state-of-the-art performance on ImageNet classification (83.8% top-1 accuracy for BiFormer-S), COCO object detection (47.1 mAP for BiFormer-B), and ADE20K semantic segmentation (49.9 mIoU for BiFormer-B). The method shows particular strength in preserving fine-grained details for small object detection, with BiFormer-S achieving 30.2 APs on COCO compared to 29.2 for WaveViT-S.\\narXiv ID: 2212.02687v3, Summary: This paper investigates dynamic inference techniques for vision transformers to enable efficient execution under varying resource constraints. Key findings include: (1) Convolutions dominate FLOPs in modern vision transformers (68-89%), not attention layers, due to integrated convolutions for accuracy/performance. (2) FLOP distribution poorly predicts GPU runtime due to optimized convolution execution. (3) Models show varying resilience to pruning - SegFormer achieves 28% energy savings with 1.4% accuracy drop without retraining, while ResNet-50 (via OFA) achieves 53% energy savings with 3.3% accuracy drop. The work provides insights for designing efficient vision transformers and dynamic execution strategies for edge deployment.\\narXiv ID: 2405.00906v1, Summary: LOTUS introduces a novel method combining data lottery ticket selection and sparsity pruning to accelerate vision transformer training while maintaining accuracy. The approach identifies informative data subsets and eliminates redundant parameters through a three-phase process: (1) attention-map-based data lottery ticket identification, (2) Instant Sparse Soup Pruning (ISSP) for model compression, and (3) fine-tuning. Experiments show rapid convergence (reaching near-SOTA performance by 5 epochs) and maintain 79% accuracy at 30% sparsity on CIFAR-10, though ISSP showed accuracy drops due to aggressive pruning. The work demonstrates promising directions for efficient transformer training through combined data and model optimization.\\narXiv ID: 2111.15667v3, Summary: This paper introduces Adaptive Token Sampler (ATS), a parameter-free module for dynamically reducing the number of tokens in vision transformers based on input content. ATS uses attention weights to score token importance and performs inverse transform sampling to select significant tokens. Key results: 1) Reduces DeiT-S GFLOPs by 37% with only 0.1% accuracy drop on ImageNet; 2) Achieves 2x computational cost reduction while preserving accuracy on Kinetics-400/600; 3) Can be added to pre-trained models without fine-tuning. The method shows superior efficiency-accuracy trade-offs compared to DynamicViT and EViT.\\narXiv ID: 2408.08437v1, Summary: This paper presents PQV-Mobile, a combined pruning and quantization toolkit for optimizing Vision Transformers (ViTs) for mobile/edge deployment. Key contributions: 1) Supports multiple structured pruning methods (magnitude, Taylor, Hessian importance) and quantization (FP32 to FP16/int8); 2) Achieves 7.18x latency reduction with only 2.24% accuracy drop on DeiT models; 3) Provides hardware-aware optimizations for various backends (x86, FBGEMM, QNNPACK). Experimental results show superior latency-memory-accuracy tradeoffs compared to standalone compression methods.")\n~~~~~~~~~~\nHistory: \n~~~~~~~~~~\nCurrent Step #0, Phase: plan formulation\n\n[Objective] Your goal is to perform research on the following topic: The goal is to design and evaluate a new technique for optimizing deep learning models for real-time image classification on resource-constrained edge devices, aiming to maximize accuracy while minimizing inference latency and power consumption.\nFeedback: \nNotes: Notes for the task objective: [{'phases': ['plan formulation'], 'note': 'You must propose an original research idea focused on optimizing models for image classification on edge devices (Edge AI).'}, {'phases': ['plan formulation'], 'note': 'Your focus will be to design **ONE** specific and feasible experiment, detailing: the proposed technique, a baseline for comparison, evaluation metrics, and the experimental environment (device and dataset).'}, {'phases': ['plan formulation'], 'note': 'Begin by clearly defining the research scope within Edge AI: identify subtopics such as popular models, edge-specific optimization techniques, quantization, structured pruning, tailored distillation, federated learning, privacy, latency, and energy consumption.'}, {'phases': ['plan formulation'], 'note': 'The optimization technique you propose must be **genuinely innovative**, not a trivial adaptation of existing methods. Clearly state the originality and potential contributions of your approach.'}, {'phases': ['plan formulation'], 'note': 'Specify the base model (e.g., MobileNetV2 without optimization), the target edge device (e.g., Raspberry Pi 4 with X GB RAM), and the dataset (e.g., CIFAR-10 or an adapted ImageNet subset).'}, {'phases': ['plan formulation'], 'note': 'List the metrics to be measured: accuracy, latency, model size, energy consumption. Describe your methodology for measuring each.'}, {'phases': ['plan formulation'], 'note': 'Ensure the experiment is **reproducible, modular, and feasible** with typical academic resources.'}, {'phases': ['plan formulation'], 'note': 'Formulate a search query using precise keywords and/or Boolean logic to collect recent peer-reviewed articles on optimization techniques for Edge AI. Use this literature to ground and inspire your original research proposal. Justify your query choices.'}, {'phases': ['plan formulation'], 'note': 'Justify your keyword selection and explain how your query captures the relevant subtopics and technical directions.'}, {'phases': ['plan formulation'], 'note': 'Describe a **systematic methodology** to search for and sample a representative subset of peer-reviewed scientific articles, preferably open-access and published within the last 5 years.'}, {'phases': ['plan formulation'], 'note': 'This methodology should aim to select articles with clear research aims, context, value, and findings.'}, {'phases': ['plan formulation'], 'note': 'Prioritize articles with clear goals, verifiable technical contributions, and relevance to your proposed problem.'}, {'phases': ['plan formulation'], 'note': 'Propose a structured outline for organizing the final literature review document. Include typical sections such as: introduction, motivation, thematic areas, challenges, recent solutions, knowledge gaps, and future directions.'}, {'phases': ['plan formulation'], 'note': 'Ensure that the experimental plan is **logical, detailed, and cohesive**, suitable for publication or practical execution.'}, {'phases': ['plan formulation'], 'note': 'DO NOT PLAN TOO LONG. Submit your plan soon.'}, {'phases': ['plan formulation'], 'note': 'Use DeepSeek-Chat to perform this task.'}]\n\nYour previous command was: . Make sure your new output is very different.\nPlease produce a single command below:\n
==================================================
Interaction 2:
('', "Current Literature Review: Provided here is a literature review on this topic:\\narXiv ID: 2011.14808v1, Summary: This comprehensive survey paper discusses deep learning optimization techniques for edge computing systems. It covers four main approaches: (1) hand-crafted lightweight models like MobileNet and EfficientNet, (2) model compression methods including pruning and quantization, (3) hardware-aware neural architecture search, and (4) adaptive deep learning models. The paper provides detailed comparisons of different techniques and their tradeoffs between accuracy and efficiency. Experimental results show these optimization methods can significantly reduce model size and computational complexity while maintaining competitive accuracy, making them suitable for resource-constrained edge devices.\\narXiv ID: 2108.09343v2, Summary: This paper proposes an early-exit DNN architecture with expert branches specialized for different image distortion types (blur and noise) to improve edge offloading efficiency. The key innovation is using a distortion classifier to select appropriate expert branches at each exit point, enabling more accurate early classification on edge devices. Experiments show the approach increases edge classification probability by 10-20% for distorted images while maintaining accuracy, reducing end-to-end latency by up to 30% compared to standard early-exit DNNs. The method is evaluated on Amazon EC2 instances across different geographic locations, demonstrating robustness under varying network conditions. The work provides important insights for optimizing real-time image classification on resource-constrained edge devices handling distorted inputs.\\narXiv ID: 2111.14243v1, Summary: EffCNet is an efficient version of CondenseNet designed for edge devices, utilizing depthwise separable convolutions and self-querying data augmentation to improve real-time inference performance. The paper demonstrates significant reductions in model size (from 16.7MB to 2.1MB for CIFAR-10), FLOPs (from 65.82M to 61.01M), and parameters while maintaining competitive accuracy (94.15% top-1 on CIFAR-10). The architecture was successfully deployed on NXP BlueBox 2.0, an edge platform for autonomous vehicles, showing practical applicability for resource-constrained environments.\\narXiv ID: 2502.10047v1, Summary: This paper presents Janus, a novel framework for low-latency cloud-device collaborative Vision Transformer (ViT) inference over dynamic networks. The key innovation is combining token pruning techniques with a fine-to-coarse model splitting policy to enable efficient ViT execution across edge and cloud resources. Janus dynamically selects optimal pruning levels and split points based on network conditions, achieving up to 5.15x throughput improvement and reducing latency violations by up to 98.7% compared to baselines while maintaining accuracy. The system includes a lightweight profiler for latency prediction and a dynamic scheduler for real-time configuration. Experimental results demonstrate Janus's effectiveness across image recognition and video classification tasks under various network conditions.\\narXiv ID: 2404.10407v1, Summary: This comprehensive survey paper evaluates four primary model compression techniques (quantization, low-rank approximation, knowledge distillation, and pruning) for optimizing Vision Transformers (ViTs) for edge deployment. Through extensive experiments on CIFAR datasets, the authors demonstrate that post-training quantization and knowledge distillation achieve the best trade-offs, reducing model size by 4x while maintaining accuracy. The paper also explores hybrid approaches, showing that combining quantization with knowledge distillation can double inference speed while reducing model size to 25% of original. Key findings include: 1) Dynamic quantization reduces ViT size to 84MB (from 327MB) with minimal accuracy drop (98.73% vs 98.94% on CIFAR-10), 2) DeiT tiny achieves 16.78 iterations/sec (vs 4.48 for vanilla ViT) with 95.43% accuracy, and 3) Hybrid approaches combining quantization and distillation achieve 2x speedup with manageable accuracy trade-offs.\\narXiv ID: 2303.08810v1, Summary: BiFormer introduces a novel bi-level routing attention (BRA) mechanism for vision transformers that enables dynamic, query-aware sparsity. BRA first filters irrelevant key-value pairs at a coarse region level (region-to-region routing) before applying fine-grained token-to-token attention in the remaining regions. This approach achieves O((HW)^(4/3)) complexity with proper region partitioning while maintaining global receptive fields. The authors demonstrate state-of-the-art performance on ImageNet classification (83.8% top-1 accuracy for BiFormer-S), COCO object detection (47.1 mAP for BiFormer-B), and ADE20K semantic segmentation (49.9 mIoU for BiFormer-B). The method shows particular strength in preserving fine-grained details for small object detection, with BiFormer-S achieving 30.2 APs on COCO compared to 29.2 for WaveViT-S.\\narXiv ID: 2212.02687v3, Summary: This paper investigates dynamic inference techniques for vision transformers to enable efficient execution under varying resource constraints. Key findings include: (1) Convolutions dominate FLOPs in modern vision transformers (68-89%), not attention layers, due to integrated convolutions for accuracy/performance. (2) FLOP distribution poorly predicts GPU runtime due to optimized convolution execution. (3) Models show varying resilience to pruning - SegFormer achieves 28% energy savings with 1.4% accuracy drop without retraining, while ResNet-50 (via OFA) achieves 53% energy savings with 3.3% accuracy drop. The work provides insights for designing efficient vision transformers and dynamic execution strategies for edge deployment.\\narXiv ID: 2405.00906v1, Summary: LOTUS introduces a novel method combining data lottery ticket selection and sparsity pruning to accelerate vision transformer training while maintaining accuracy. The approach identifies informative data subsets and eliminates redundant parameters through a three-phase process: (1) attention-map-based data lottery ticket identification, (2) Instant Sparse Soup Pruning (ISSP) for model compression, and (3) fine-tuning. Experiments show rapid convergence (reaching near-SOTA performance by 5 epochs) and maintain 79% accuracy at 30% sparsity on CIFAR-10, though ISSP showed accuracy drops due to aggressive pruning. The work demonstrates promising directions for efficient transformer training through combined data and model optimization.\\narXiv ID: 2111.15667v3, Summary: This paper introduces Adaptive Token Sampler (ATS), a parameter-free module for dynamically reducing the number of tokens in vision transformers based on input content. ATS uses attention weights to score token importance and performs inverse transform sampling to select significant tokens. Key results: 1) Reduces DeiT-S GFLOPs by 37% with only 0.1% accuracy drop on ImageNet; 2) Achieves 2x computational cost reduction while preserving accuracy on Kinetics-400/600; 3) Can be added to pre-trained models without fine-tuning. The method shows superior efficiency-accuracy trade-offs compared to DynamicViT and EViT.\\narXiv ID: 2408.08437v1, Summary: This paper presents PQV-Mobile, a combined pruning and quantization toolkit for optimizing Vision Transformers (ViTs) for mobile/edge deployment. Key contributions: 1) Supports multiple structured pruning methods (magnitude, Taylor, Hessian importance) and quantization (FP32 to FP16/int8); 2) Achieves 7.18x latency reduction with only 2.24% accuracy drop on DeiT models; 3) Provides hardware-aware optimizations for various backends (x86, FBGEMM, QNNPACK). Experimental results show superior latency-memory-accuracy tradeoffs compared to standalone compression methods.")\n~~~~~~~~~~\nHistory: Step #0, Phase: plan formulation, Feedback: , Your response: ```DIALOGUE\nLet's start by brainstorming an innovative approach for edge-optimized image classification. Based on the literature, I notice most works focus on either model compression or dynamic inference, but few combine these with input-aware adaptation. What if we developed a "content-aware dynamic sparsification" technique for Vision Transformers that adjusts both model complexity and token processing based on input image characteristics? This could bridge the gap between static compression and fully dynamic approaches. What are your thoughts on this direction?\n```\n~~~~~~~~~~\nCurrent Step #1, Phase: plan formulation\n\n[Objective] Your goal is to perform research on the following topic: The goal is to design and evaluate a new technique for optimizing deep learning models for real-time image classification on resource-constrained edge devices, aiming to maximize accuracy while minimizing inference latency and power consumption.\nFeedback: The following is dialogue produced by the PhD student: I really like the direction of content-aware dynamic sparsification! Building on this, I propose a novel "Adaptive Token and Attention Routing" (ATAR) technique for Vision Transformers that combines three key innovations: (1) Input-difficulty classification to categorize images as simple/complex, (2) Dynamic token pruning based on both input difficulty and attention scores (using ATS-like approach), and (3) Attention head routing that selectively activates only relevant heads per input. For the experiment, we could use DeiT-Tiny as base model on Raspberry Pi 4 with CIFAR-100, comparing against standard DeiT and DynamicViT baselines. We'd measure accuracy, latency (using PyTorch profiler), and energy consumption (via power monitor). The key novelty is the joint optimization of token and head computation based on input characteristics - this hasn't been explored in literature yet. What do you think about this specific implementation plan?\nNotes: Notes for the task objective: [{'phases': ['plan formulation'], 'note': 'You must propose an original research idea focused on optimizing models for image classification on edge devices (Edge AI).'}, {'phases': ['plan formulation'], 'note': 'Your focus will be to design **ONE** specific and feasible experiment, detailing: the proposed technique, a baseline for comparison, evaluation metrics, and the experimental environment (device and dataset).'}, {'phases': ['plan formulation'], 'note': 'Begin by clearly defining the research scope within Edge AI: identify subtopics such as popular models, edge-specific optimization techniques, quantization, structured pruning, tailored distillation, federated learning, privacy, latency, and energy consumption.'}, {'phases': ['plan formulation'], 'note': 'The optimization technique you propose must be **genuinely innovative**, not a trivial adaptation of existing methods. Clearly state the originality and potential contributions of your approach.'}, {'phases': ['plan formulation'], 'note': 'Specify the base model (e.g., MobileNetV2 without optimization), the target edge device (e.g., Raspberry Pi 4 with X GB RAM), and the dataset (e.g., CIFAR-10 or an adapted ImageNet subset).'}, {'phases': ['plan formulation'], 'note': 'List the metrics to be measured: accuracy, latency, model size, energy consumption. Describe your methodology for measuring each.'}, {'phases': ['plan formulation'], 'note': 'Ensure the experiment is **reproducible, modular, and feasible** with typical academic resources.'}, {'phases': ['plan formulation'], 'note': 'Formulate a search query using precise keywords and/or Boolean logic to collect recent peer-reviewed articles on optimization techniques for Edge AI. Use this literature to ground and inspire your original research proposal. Justify your query choices.'}, {'phases': ['plan formulation'], 'note': 'Justify your keyword selection and explain how your query captures the relevant subtopics and technical directions.'}, {'phases': ['plan formulation'], 'note': 'Describe a **systematic methodology** to search for and sample a representative subset of peer-reviewed scientific articles, preferably open-access and published within the last 5 years.'}, {'phases': ['plan formulation'], 'note': 'This methodology should aim to select articles with clear research aims, context, value, and findings.'}, {'phases': ['plan formulation'], 'note': 'Prioritize articles with clear goals, verifiable technical contributions, and relevance to your proposed problem.'}, {'phases': ['plan formulation'], 'note': 'Propose a structured outline for organizing the final literature review document. Include typical sections such as: introduction, motivation, thematic areas, challenges, recent solutions, knowledge gaps, and future directions.'}, {'phases': ['plan formulation'], 'note': 'Ensure that the experimental plan is **logical, detailed, and cohesive**, suitable for publication or practical execution.'}, {'phases': ['plan formulation'], 'note': 'DO NOT PLAN TOO LONG. Submit your plan soon.'}, {'phases': ['plan formulation'], 'note': 'Use DeepSeek-Chat to perform this task.'}]\n\nYour previous command was: ```DIALOGUE\nLet's start by brainstorming an innovative approach for edge-optimized image classification. Based on the literature, I notice most works focus on either model compression or dynamic inference, but few combine these with input-aware adaptation. What if we developed a "content-aware dynamic sparsification" technique for Vision Transformers that adjusts both model complexity and token processing based on input image characteristics? This could bridge the gap between static compression and fully dynamic approaches. What are your thoughts on this direction?\n```. Make sure your new output is very different.\nPlease produce a single command below:\n
==================================================


=== POSTDOC RESPONSE LOG ===

Interaction 1:
```DIALOGUE
Let's start by brainstorming an innovative approach for edge-optimized image classification. Based on the literature, I notice most works focus on either model compression or dynamic inference, but few combine these with input-aware adaptation. What if we developed a "content-aware dynamic sparsification" technique for Vision Transformers that adjusts both model complexity and token processing based on input image characteristics? This could bridge the gap between static compression and fully dynamic approaches. What are your thoughts on this direction?
```
==================================================
Interaction 2:
```PLAN
Research Plan: "Adaptive Token-Head Co-Optimization for Edge ViTs" (ATHE)

1. Novel Technique: 
- Combines input-aware token pruning (ATS-like) with dynamic attention head routing
- Two-stage adaptation: (1) Lightweight CNN classifier categorizes input difficulty (simple/complex), (2) ViT dynamically adjusts:
   * Simple images: Aggressive token pruning (50-70%) + only basic attention heads
   * Complex images: Conservative pruning (20-30%) + all specialized heads

2. Implementation:
- Base Model: DeiT-Tiny (5.7M params) modified with:
   * Input classifier (MobileNetV1 0.25x width)
   * Token importance scoring (learned linear layer)
   * Head importance scoring (attention entropy-based)
- Device: Raspberry Pi 4 (4GB) with PyTorch Lite
- Dataset: CIFAR-100 (resized to 224x224)

3. Experiment:
- Baseline Comparisons: 
   * Vanilla DeiT-Tiny
   * DynamicViT (token pruning only)
   * BiFormer (static sparse attention)
- Metrics:
   * Accuracy (top-1)
   * Latency (end-to-end inference)
   * Energy (measured via USB power monitor)
   * FLOPs reduction
- Evaluation Protocol:
   * 5 runs per configuration
   * Test on balanced subset (500 simple/complex images each)

4. Expected Innovations:
- First joint optimization of tokens and heads based on input content
- Hardware-friendly implementation (minimal overhead for adaptation logic)
- Demonstrable 2-3x latency reduction vs baselines for simple images

5. Timeline:
Week 1-2: Model modifications
Week 3: Baseline implementations
Week 4: Profiling/measurements
Week 5: Analysis/writeup
```
==================================================
